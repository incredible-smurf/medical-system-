{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue try\\system\\src\\page\\login\\accountCreate.vue?vue&type=style&index=0&id=7b95973c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\src\\page\\login\\accountCreate.vue","mtime":1606566058716},{"path":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\vue try\\system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5sb2dpbi1mb3JtIHsNCiAgd2lkdGg6IDM1MHB4Ow0KICBtYXJnaW46IDEwMHB4IGF1dG87IC8qIOS4iuS4i+mXtOi3nTE2MHB477yM5bem5Y+z6Ieq5Yqo5bGF5LitKi8NCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUsIDAuOCk7IC8qIOmAj+aYjuiDjOaZr+iJsiAqLw0KICBwYWRkaW5nOiAzMHB4Ow0KICBib3JkZXItcmFkaXVzOiAyMHB4OyAvKiDlnIbop5IgKi8NCn0NCi5sb2dpbi10aXRsZSB7DQogIGNvbG9yOiAjMzAzMTMzOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQo="},{"version":3,"sources":["accountCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"accountCreate.vue","sourceRoot":"src/page/login","sourcesContent":["<template>\r\n  <div class=\"login-form\">\r\n    <el-form\r\n      :model=\"Form\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      label-width=\"100px\"\r\n      ref=\"Form\"\r\n    >\r\n      <h2 class=\"login-title\">注册新用户</h2>\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"Form.username\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input\r\n          type=\"password\"\r\n          v-model=\"Form.password\"\r\n          autocomplete=\"off\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"确认密码\" prop=\"checkpass\">\r\n        <el-input\r\n          type=\"password\"\r\n          v-model=\"Form.checkpass\"\r\n          autocomplete=\"off\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('Form')\">提交</el-button>\r\n        <el-button @click=\"resetForm('Form')\">重置</el-button>\r\n        <el-button @click=\"$router.back()\">返回</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* 引入mapMutations储存登录状态 */\r\nimport { mapMutations } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    //检查是否用户名占用或用户名为空\r\n    var checkusername = (rule, value, callback) => {\r\n      if (value === \"\") callback(new Error(\"请输入用户名\"));\r\n      this.$axios\r\n        .get(\"/userList\")\r\n        .then((response) => {\r\n          //console.log(response);\r\n          for (let i = 0; i < response.data.results.length; i++)\r\n          if (value === response.data.results[i].account_number) {\r\n            callback(new Error(\"该名称已占用\"));\r\n          }\r\n          callback();\r\n        })\r\n        .catch((error) => {\r\n          callback(new Error(error));\r\n        });\r\n    };\r\n    //检查密码是否为空\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else {\r\n        if (this.Form.checkpass !== \"\") {\r\n          this.$refs.Form.validateField(\"checkpass\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    //检查密码一致性\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.Form.password) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      Form: {\r\n        username: \"\",\r\n        password: \"\",\r\n        checkpass: \"\",\r\n      },\r\n      rules: {\r\n        password: [{ validator: validatePass, trigger: \"blur\" }],\r\n        checkpass: [{ validator: validatePass2, trigger: \"blur\" }],\r\n        username: [{ validator: checkusername, trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"changeLogin\", \"changeUser\"]),\r\n    //提交给搓成\r\n    submitForm(formName) {\r\n      let _self = this;\r\n      let tmpsummit = {\r\n        username: _self.Form.username,\r\n        password: _self.Form.password,\r\n      };\r\n      //console.log(tmpsummit);\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          //创建用户\r\n          this.$axios.post(\"/userCreate/\", tmpsummit).then((res) => {\r\n            //使用该用户登录 获取其token和用户信息并保存\r\n            this.$axios.post(\"/api-token-auth/\", tmpsummit).then((res) => {\r\n              _self.changeLogin({ Authorization: res.data.token });\r\n              _self.$axios.defaults.headers.Authorization =\r\n                \"Token \" + res.data.token;\r\n              let usertmp = {};\r\n              this.$axios\r\n                .get(\"/userInfoRU/\")\r\n                .then((res) => {\r\n                  let sex = res.data.sex == \"male\" ? \"男\" : \"女\";\r\n                  usertmp.name = res.data.name;\r\n                  usertmp.office = res.data.office;\r\n                  usertmp.phoneNumber = res.data.phoneNumber;\r\n                  usertmp.sex = sex;\r\n                  usertmp.title = res.data.title;\r\n                  this.changeUser(usertmp);\r\n                })\r\n                .catch((err) => {\r\n                  alert(err);\r\n                });\r\n              _self.$router.push(\"/home\");\r\n            });\r\n          });\r\n        } else {\r\n          alert(\"存在错误，请重新填写\");\r\n          console.log(\"as\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    //重置表单\r\n    resetForm(formName) {\r\n      if (this.$refs[formName] !== undefined) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-form {\r\n  width: 350px;\r\n  margin: 100px auto; /* 上下间距160px，左右自动居中*/\r\n  background-color: rgb(255, 255, 255, 0.8); /* 透明背景色 */\r\n  padding: 30px;\r\n  border-radius: 20px; /* 圆角 */\r\n}\r\n.login-title {\r\n  color: #303133;\r\n  text-align: center;\r\n}\r\n</style>"]}]}